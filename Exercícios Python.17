#üë®üèΩ‚ÄçüíªExerc√≠cios para treinar o b√°sico de POO
#Criando uma classe Simples
#Objetivo: Criar uma classe Carro, com os atributos:
#Marca, modelo e ano. Depois criar um objeto e imprimir os dados.
class carro:
    def __init__ (self, marca, modelo, ano):
        self.marca = marca
        self.modelo = modelo
        self.ano = ano
    
    def apresentar_carro(self):
        print(f"A marca do carro √©: {self.marca}, o modelo √©: {self.modelo} e o ano √©: {self.ano} ")


carro1 = carro("Ford", "Ka", 2018)
carro1.apresentar_carro()


#Exerc√≠cio2 / M√©todo com C√°lculo
#Criar uma classe Retangulo que calcula √°rea.
class Retangulo:
    def __init__ (self, largura, altura):
        self.largura = largura
        self.altura = altura

    def calcular_area(self):
        valor_calculado = self.largura * self.altura
        print(f"Essa √© a √°rea: {valor_calculado}")
    
retangulo_qualquer = Retangulo(4, 5)
retangulo_qualquer.calcular_area()


#üíªExerc√≠cio3 / Encapsulamento b√°sico
#‚úÖCriar uma conta banc√°ria com saldo protegido.
class ContaSimples:
    def __init__(self,saldo):
        self.__saldo = saldo
    
    def depositar_valor(self, valor):
        self.__saldo += valor

    def versaldo(self):
        print(f"üí∞ Esse √© o seu saldo: R${self.__saldo:.2f}")

# Criando a conta com saldo inicial
conta1 = ContaSimples(100.0)

# Depositando um valor
valor = float(input("Digite o valor a ser adicionado: "))
conta1.depositar_valor(valor)

#Vendo o saldo
conta1.versaldo()
